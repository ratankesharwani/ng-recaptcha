"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[211],{9211:(w,i,p)=>{p.r(i),p.d(i,{DemoModule:()=>o});var r=p(6895),j=p(6125),e=p(8148),u=p(7663),h=p(7855),s=p(4650);function g(l,n){1&l&&(s.TgZ(0,"h3"),s._uU(1,"Most recent token"),s.qZA())}function m(l,n){if(1&l&&(s.TgZ(0,"pre"),s._uU(1),s.qZA()),2&l){const a=s.oxw();s.xp6(1),s.Oqu(a.formatToken(a.recentToken))}}function d(l,n){1&l&&(s.TgZ(0,"h3",3),s._uU(1,"Most recent error"),s.qZA())}function _(l,n){if(1&l&&(s.TgZ(0,"pre",3),s._uU(1),s.qZA()),2&l){const a=s.oxw();s.xp6(1),s.Oqu(a.recentError.error||"Most recent execution resulted in error")}}function x(l,n){1&l&&(s.TgZ(0,"pre"),s._uU(1,"(empty)"),s.qZA())}function y(l,n){if(1&l&&(s._uU(0," Token: "),s.TgZ(1,"code"),s._uU(2),s.qZA()),2&l){const a=s.oxw().$implicit,t=s.oxw(2);s.xp6(2),s.Oqu(t.formatToken(a.token))}}function f(l,n){if(1&l&&(s.TgZ(0,"span",3),s._uU(1,"Error"),s.qZA(),s._uU(2,": "),s.TgZ(3,"code"),s._uU(4),s.qZA()),2&l){const a=s.oxw().$implicit;s.xp6(4),s.Oqu(a.error||"This execution resulted in error")}}function b(l,n){if(1&l&&(s.TgZ(0,"li"),s._uU(1," Action: "),s.TgZ(2,"code"),s._uU(3),s.qZA(),s._uU(4,". "),s.YNc(5,y,3,1,"ng-template",5),s.YNc(6,f,5,1,"ng-template",5),s.qZA()),2&l){const a=n.$implicit;s.xp6(3),s.Oqu(a.action),s.xp6(2),s.Q6J("ngIf",a.token),s.xp6(1),s.Q6J("ngIf",!a.token)}}function k(l,n){if(1&l&&(s.TgZ(0,"ol"),s.YNc(1,b,7,3,"li",4),s.qZA()),2&l){const a=s.oxw();s.xp6(1),s.Q6J("ngForOf",a.executionLog)}}class c{constructor(n){this.recaptchaV3Service=n,this.recentToken="",this.executionLog=[]}executeAction(n){this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe(),this.singleExecutionSubscription=this.recaptchaV3Service.execute(n).subscribe(a=>{this.recentToken=a,this.recentError=void 0},a=>{this.recentToken="",this.recentError={error:a}})}ngOnInit(){this.allExecutionsSubscription=this.recaptchaV3Service.onExecute.subscribe(n=>this.executionLog.push(n)),this.allExecutionErrorsSubscription=this.recaptchaV3Service.onExecuteError.subscribe(n=>this.executionLog.push(n))}ngOnDestroy(){this.allExecutionsSubscription&&this.allExecutionsSubscription.unsubscribe(),this.allExecutionErrorsSubscription&&this.allExecutionErrorsSubscription.unsubscribe(),this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe()}formatToken(n){return n?`${n.substr(0,7)}...${n.substr(-7)}`:"(empty)"}static#s=this.\u0275fac=function(a){return new(a||c)(s.Y36(e.YC))};static#a=this.\u0275cmp=s.Xpm({type:c,selectors:[["recaptcha-demo"]],decls:12,vars:6,consts:[[3,"click"],[4,"ngIf"],["class","error",4,"ngIf"],[1,"error"],[4,"ngFor","ngForOf"],[3,"ngIf"]],template:function(a,t){1&a&&(s.TgZ(0,"button",0),s.NdJ("click",function(){return t.executeAction("homepage")}),s._uU(1,'Execute "homepage" action'),s.qZA(),s.TgZ(2,"button",0),s.NdJ("click",function(){return t.executeAction("shoppingCart")}),s._uU(3,'Execute "shoppingCart" action'),s.qZA(),s.YNc(4,g,2,0,"h3",1),s.YNc(5,m,2,1,"pre",1),s.YNc(6,d,2,0,"h3",2),s.YNc(7,_,2,1,"pre",2),s.TgZ(8,"h3"),s._uU(9,"reCAPTCHA execution log"),s.qZA(),s.YNc(10,x,2,0,"pre",1),s.YNc(11,k,2,1,"ol",1)),2&a&&(s.xp6(4),s.Q6J("ngIf",t.recentToken),s.xp6(1),s.Q6J("ngIf",t.recentToken),s.xp6(1),s.Q6J("ngIf",t.recentError),s.xp6(1),s.Q6J("ngIf",t.recentError),s.xp6(3),s.Q6J("ngIf",0===t.executionLog.length),s.xp6(1),s.Q6J("ngIf",t.executionLog.length>0))},dependencies:[r.sg,r.O5],styles:[".error[_ngcontent-%COMP%]{color:#dc143c}"]})}const E=[{path:"",component:c,data:{page:{feature:"v3",title:"reCAPTCHA v3 Example",content:{component:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">OnDestroy</span>, <span class="hljs-title class_">OnInit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">OnExecuteData</span>, <span class="hljs-title class_">OnExecuteErrorData</span>, <span class="hljs-title class_">ReCaptcha</span>V3Service } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Subscription</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;rxjs&quot;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .error {\n        color: crimson;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./v3-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RecaptchaV3DemoComponent</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OnInit</span>, <span class="hljs-title class_">OnDestroy</span> {\n  <span class="hljs-keyword">public</span> recentToken = <span class="hljs-string">&quot;&quot;</span>;\n  <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-explicit-any</span>\n  <span class="hljs-keyword">public</span> recentError?: { <span class="hljs-attr">error</span>: <span class="hljs-built_in">any</span> };\n  <span class="hljs-keyword">public</span> <span class="hljs-keyword">readonly</span> <span class="hljs-attr">executionLog</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-title class_">OnExecuteData</span> | <span class="hljs-title class_">OnExecuteErrorData</span>&gt; = [];\n\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">allExecutionsSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">allExecutionErrorsSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">singleExecutionSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> recaptchaV3Service: ReCaptchaV3Service</span>) {}\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">executeAction</span>(<span class="hljs-attr">action</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-title function_">execute</span>(action).<span class="hljs-title function_">subscribe</span>(\n      <span class="hljs-function">(<span class="hljs-params">token</span>) =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentToken</span> = token;\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentError</span> = <span class="hljs-literal">undefined</span>;\n      },\n      <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentToken</span> = <span class="hljs-string">&quot;&quot;</span>;\n        <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment</span>\n        <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentError</span> = { error };\n      },\n    );\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">ngOnInit</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-property">onExecute</span>.<span class="hljs-title function_">subscribe</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span>\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">executionLog</span>.<span class="hljs-title function_">push</span>(data),\n    );\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-property">onExecuteError</span>.<span class="hljs-title function_">subscribe</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span>\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">executionLog</span>.<span class="hljs-title function_">push</span>(data),\n    );\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">ngOnDestroy</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">formatToken</span>(<span class="hljs-attr">token</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span> {\n    <span class="hljs-keyword">if</span> (!token) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;(empty)&quot;</span>;\n    }\n\n    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${token.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${token.substr(-<span class="hljs-number">7</span>)}</span>`</span>;\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;homepage&#x27;)&quot;</span>&gt;</span>Execute &quot;homepage&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;shoppingCart&#x27;)&quot;</span>&gt;</span>Execute &quot;shoppingCart&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>Most recent token<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>{{ formatToken(recentToken) }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Most recent error<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>{{ recentError.error || &quot;Most recent execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>reCAPTCHA execution log<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length === 0&quot;</span>&gt;</span>(empty)<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">ol</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length &gt; 0&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let entry of executionLog&quot;</span>&gt;</span>\n    Action: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.action }}&lt;/code\n    &gt;.\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;entry.token&quot;</span>&gt;</span>\n      Token: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ formatToken(entry.token) }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;!entry.token&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Error<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>:\n      <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.error || &quot;This execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-title class_">Recaptcha</span>V3Module } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Recaptcha</span>V3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Recaptcha</span>V3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">Recaptcha</span>V3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">Recaptcha</span>V3Module,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',fr:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-title class_">Recaptcha</span>V3Module, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Recaptcha</span>V3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Recaptcha</span>V3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">Recaptcha</span>V3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">Recaptcha</span>V3Module,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',de:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-title class_">Recaptcha</span>V3Module, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Recaptcha</span>V3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Recaptcha</span>V3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">Recaptcha</span>V3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">Recaptcha</span>V3Module,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n'}}}}}];class o{static#s=this.\u0275fac=function(a){return new(a||o)};static#a=this.\u0275mod=s.oAB({type:o});static#n=this.\u0275inj=s.cJS({providers:[{provide:e.We,useValue:h.$w},{provide:e.BZ,useValue:{siteKey:h.q6}},{provide:e.oS,useValue:(0,u.g)()}],imports:[j.Bz.forChild(E),e.dw,r.ez]})}}}]);