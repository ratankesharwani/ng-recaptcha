"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[680],{1680:(y,h,n)=>{n.r(h),n.d(h,{DemoModule:()=>c});var d=n(6895),u=n(6125),t=n(8148),m=n(7663),i=n(7855),s=n(4650);class e{constructor(){this.captchaResponse=""}resolved(a){const l=a&&`${a.substr(0,7)}...${a.substr(-7)}`;this.captchaResponse+=`${JSON.stringify(l)}\n`}onError(a){this.captchaResponse+="ERROR; error details (if any) have been logged to console\n",console.log("reCAPTCHA error encountered; details:",a)}static#s=this.\u0275fac=function(l){return new(l||e)};static#a=this.\u0275cmp=s.Xpm({type:e,selectors:[["recaptcha-demo"]],decls:8,vars:1,consts:[["errorMode","handled","size","invisible",3,"resolved","errored"],["captchaRef","reCaptcha"],[3,"click"]],template:function(l,o){if(1&l){const j=s.EpF();s.TgZ(0,"re-captcha",0,1),s.NdJ("resolved",function(p){return o.resolved(p)})("errored",function(p){return o.onError(p)}),s.qZA(),s.TgZ(2,"button",2),s.NdJ("click",function(){s.CHM(j);const p=s.MAs(1);return s.KtG(p.execute())}),s._uU(3,"Submit"),s.qZA(),s.TgZ(4,"button",2),s.NdJ("click",function(){s.CHM(j);const p=s.MAs(1);return s.KtG(p.reset())}),s._uU(5,"Reset"),s.qZA(),s.TgZ(6,"pre"),s._uU(7),s.qZA()}2&l&&(s.xp6(7),s.hij("reCAPTCHA response log:\n",o.captchaResponse||"(empty)",""))},dependencies:[t.wT],encapsulation:2})}const g=[{path:"",component:e,data:{page:{feature:"invisible",title:"Invisible reCAPTCHA API Example",content:{component:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaErrorParameters</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./invisible-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InvisibleDemoComponent</span> {\n  <span class="hljs-keyword">public</span> captchaResponse = <span class="hljs-string">&quot;&quot;</span>;\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">resolved</span>(<span class="hljs-attr">captchaResponse</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">const</span> newResponse = captchaResponse\n      ? <span class="hljs-string">`<span class="hljs-subst">${captchaResponse.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${captchaResponse.substr(-<span class="hljs-number">7</span>)}</span>`</span>\n      : captchaResponse;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">captchaResponse</span> += <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-built_in">JSON</span>.stringify(newResponse)}</span>\\n`</span>;\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">onError</span>(<span class="hljs-attr">errorDetails</span>: <span class="hljs-title class_">RecaptchaErrorParameters</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">captchaResponse</span> += <span class="hljs-string">`ERROR; error details (if any) have been logged to console\\n`</span>;\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`reCAPTCHA error encountered; details:`</span>, errorDetails);\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span>\n  #<span class="hljs-attr">captchaRef</span>=<span class="hljs-string">&quot;reCaptcha&quot;</span>\n  (<span class="hljs-attr">resolved</span>)=<span class="hljs-string">&quot;resolved($event)&quot;</span>\n  (<span class="hljs-attr">errored</span>)=<span class="hljs-string">&quot;onError($event)&quot;</span>\n  <span class="hljs-attr">errorMode</span>=<span class="hljs-string">&quot;handled&quot;</span>\n  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;invisible&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.execute()&quot;</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.reset()&quot;</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>\nreCAPTCHA response log:\n{{ captchaResponse || &quot;(empty)&quot; }}&lt;/pre\n&gt;\n',module:{"":'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">InvisibleDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">InvisibleDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">InvisibleDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',fr:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaModule</span>, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">InvisibleDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">InvisibleDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">InvisibleDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',de:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaModule</span>, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">InvisibleDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">InvisibleDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">InvisibleDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n'}}}}}];class c{static#s=this.\u0275fac=function(l){return new(l||c)};static#a=this.\u0275mod=s.oAB({type:c});static#n=this.\u0275inj=s.cJS({providers:[{provide:t.We,useValue:i.$w},{provide:t.BZ,useValue:{siteKey:i.vv}},{provide:t.oS,useValue:(0,m.g)()}],imports:[u.Bz.forChild(g),t.a,d.ez]})}}}]);